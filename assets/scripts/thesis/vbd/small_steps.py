import numpy as np
import matplotlib.pyplot as plt
import math
from scipy.interpolate import UnivariateSpline

# --- Données ---
#5it + Chebychev
error = [
     [ #P1
          [1.05e+01, 9.78e+00, 8.20e+00, 6.50e+00, 5.90e+00, 4.90e+00, 4.30e+00, 3.80e+00, 3.40e+00, 3.00e+00, 2.45e+00, 2.00e+00, 1.63e+00, 1.36e+00, 1.13e+00, 0.72], # 0 Base
          [8.50e+00, 4.76e+00, 3.26e+00, 2.33e+00, 1.70e+00, 1.26e+00,9.70e-01, 7.50e-01, 6.00e-01, 4.80e-01, 3.20e-01, 2.20e-01,1.57e-01, 1.51e-01, 8.65e-02], # 0.95 base
          [5.30e+00, 1.03e+00, 1.98e-01, 4.35e-02, 9.20e-03, 1.50e-03, 6.80e-05, 4.50e-05, 1.95e-04, 2.07e-04, 3.05e-05, 3.75e-05, 1.68e-04, 1.40e-04, 4.50e-05], # 0.95 10
          [3.59e+00, 4.50e-01, 6.03e-02, 8.00e-03, 3.45e-04, 2.65e-04, 1.11e-03, 1.60e-03, 1.83e-03, 1.70e-03, 1.02e-03, 3.83e-04, 1.18e-04, 1.40e-06, 2.50e-06], # 0.95 5 
          [3.20e+00, 4.30e-01, 7.80e-02, 2.10e-02, 6.70e-03, 2.60e-03, 1.00e-03, 4.10e-04, 3.15e-04, 2.20e-04, 3.60e-06, 1.08e-06, 1.58e-04, 3.33e-05, 4.90e-05], # 0 2
          [1.40e+00, 1.30e-01, 2.40e-02, 7.10e-03, 3.30e-03, 1.00e-03, 6.00e-04, 9.70e-04, 8.00e-05, 1.80e-05, 9.80e-04, 5.40e-04, 1.70e-03, 2.64e-03, 5.90e-04] # 0 1
     ], #P2
     [
          [1.10e+01, 1.00e+01, 9.20e+00, 8.00e+00, 7.00e+00, 5.70e+00, 5.00e+00, 4.50e+00, 4.10e+00, 3.70e+00, 3.04, 2.54e+00, 2.10e+00, 1.83e+00, 1.50e+00],
          [9.20e+00, 5.50e+00, 3.90e+00, 2.86e+00, 2.16e+00,1.65e+00, 1.28e+00, 1.02e+00, 8.10e-01, 6.10e-01, 4.30e-01, 3.00e-01, 2.10e-01, 1.55e-01, 1.20e-01],
          [6.00e+00, 1.40, 3.10e-01, 7.60e-02, 2.00e-02,4.70e-03, 8.50e-04, 4.40e-05, 3.50e-05, 1.30e-04,1.64e-04, 4.10e-05, 5.50e-06, 6.50e-05, 1.20e-04], 
          [4.30e+00, 6.50e-01, 1.00e-01, 1.83e-02, 2.50e-03, 5.70e-05, 2.00e-04, 5.60e-04, 8.50e-04, 9.20e-04, 8.40e-04, 5.20e-04, 2.86e-04, 4.30e-05, 1.50e-05],
          [3.87e+00, 6.10e-01, 1.30e-01, 4.00e-02, 1.10e-02, 4.30e-03, 1.70e-03, 7.00e-04, 4.70e-04, 2.90e-04, 4.50e-06, 3.10e-07, 2.00e-04, 3.50e-05, 5.87e-05],
          [ 1.80e+00, 1.80e-01, 3.70e-02, 1.10e-02, 4.50e-03, 1.50e-03, 8.80e-04, 1.27e-03, 1.30e-04, 3.10e-05, 1.20e-03, 7.00e-04, 1.60e-03, 1.80e-03, 4.50e-04]
     ]
]

error = [[[math.sqrt(val) for val in row] for row in type] for type in error]

time = [
     [
          [1.50, 2.85, 4.20, 5.60, 6.80, 8.20, 9.00, 11.00, 12.30, 13.70, 16.50, 20.00, 22.10, 25.70, 28.50, 35.5],
          [1.50, 3.00, 4.30, 6.00, 7.40, 8.90, 10.00, 11.50, 13.50, 14.30, 18.50, 21.10, 23.60, 27.90, 30.500], 
          [1.54, 2.90, 4.50, 5.90, 7.50, 8.90, 10.30, 11.70, 13.40, 14.50, 18.20, 21.30, 24.00, 27.50, 31.10],
          [1.57, 3.05, 4.50, 6.10, 7.45, 9.10, 10.50, 11.70, 13.80, 14.60, 18.60, 20.80, 24.50, 28.40, 31.60],
          [1.60, 3.10, 4.60, 6.50, 7.80, 9.30, 11.00, 12.30, 14.00, 15.30, 18.20, 21.40, 25.00, 28.80, 32.00],
          [1.70, 3.40, 5.05, 6.60, 8.20, 9.60, 11.20, 13.30, 14.50, 16.10, 19.50, 22.10, 25.60, 29.40, 31.80]
     ]
     ,
     [
          [3.00, 6.10, 9.00, 12.10, 15.00, 18.50, 21.00, 23.30, 27.00, 30.50, 37.00, 43.00, 49.50, 55.50, 62.00],
          [3.30, 6.30, 9.50, 12.60, 15.70, 19.50, 23.50, 25.50, 28.30, 31.00, 38.00, 44.50, 50.70, 57.10, 64.00],
          [3.20, 6.60, 9.70, 12.80, 15.90,19.00, 22.10, 25.50, 28.50, 31.80,38.70, 45.10, 51.80, 57.80, 65.00],
          [3.40, 6.70, 9.70, 12.60, 15.80, 18.90, 22.10, 25.60, 29.10, 32.10, 38.60, 45.50, 51.50, 58.50, 65.00], 
          [ 3.30, 6.50, 9.50, 12.50, 15.50, 18.60, 21.70, 25.00, 28.00, 31.30, 38.30, 44.50, 51.00, 57.90, 64.10 ], 
          [3.50, 6.80, 10.60, 13.40, 16.80, 20.20, 23.80, 27.10, 31.20, 34.60, 41.60, 48.00, 56.20, 62.00, 68.50]
     ]
]


fig, axes = plt.subplots(1, 2, figsize=(12, 5))
labels = [ "Base", "Base + Ch", "10it + Ch", "5it + Ch", "2it", "1it" ]
colors = ["#2c3e50", "#8e44ad","#e74c3c", "#f1c40f", "#16a085", "#3498db"]
titles = ["P1 (64x16x16)", "P2 (32x8x8)"]
limx = [[2,30], [3.5,60]]
limy = [[0,3], [0,3]]

for i in range(len(error)):
    axes[i].grid()
    axes[i].set_xlabel('cost (ms)', fontfamily="Times New Roman", fontsize=14)
    if(i == 0):
        axes[i].set_ylabel('Mean Error', fontfamily="Times New Roman", fontsize=14)
    axes[i].set_title(titles[i])
    axes[i].set_ylim(limy[i])
    axes[i].set_xlim(limx[i])
    
    for j in range(len(error[i])):
        x = np.array(time[i][j])
        y = np.array(error[i][j])

        # interpolation cubique
        f = UnivariateSpline(x, y, s=0.005)  # s contrôle la force du lissage
        xnew = np.linspace(x.min(), x.max(), 200)
        ynew = f(xnew)

        axes[i].plot(xnew, ynew, color=colors[j], label=labels[j])

    axes[i].legend()

plt.tight_layout()
plt.savefig("VBD_Convergence_Double_smooth.png", dpi=300)
plt.show()
